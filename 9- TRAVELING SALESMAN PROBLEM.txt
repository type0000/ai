import itertools

def distance(city1, city2):
   
    return ((city1[0] - city2[0])**2 + (city1[1] - city2[1])**2) ** 0.5

def total_distance(path, cities):
    
    total = 0
    for i in range(len(path) - 1):
        total += distance(cities[path[i]], cities[path[i + 1]])
    total += distance(cities[path[-1]], cities[path[0]])  # Return to the starting city
    return total

def traveling_salesman(cities):
    
    num_cities = len(cities)
    shortest_path = None
    shortest_distance = float('inf')
    
    for path in itertools.permutations(range(num_cities)):
        d = total_distance(path, cities)
        if d < shortest_distance:
            shortest_distance = d
            shortest_path = path
            
    return shortest_path, shortest_distance


cities = [(0, 0), (1, 2), (3, 1), (5, 3)]


shortest_path, shortest_distance = traveling_salesman(cities)

print("Shortest Path:", shortest_path)
print("Shortest Distance:", shortest_distance)