import numpy as np

class LinearRegression:
    def fit(self, X, y):
        # Add bias term to X
        X = np.c_[np.ones((X.shape[0], 1)), X]
        # Calculate coefficients using Ordinary Least Squares (OLS) method
        self.coefficients = np.linalg.inv(X.T.dot(X)).dot(X.T).dot(y)

    def predict(self, X):
        # Add bias term to X
        X = np.c_[np.ones((X.shape[0], 1)), X]
        # Predict using the learned coefficients
        return X.dot(self.coefficients)

def main():
    # Sample data for demonstration
    X = np.array([[1], [2], [3], [4], [5]])  # Features
    y = np.array([2, 4, 5, 4, 5])            # Target variable

    # Initialize and fit the linear regression model
    model = LinearRegression()
    model.fit(X, y)

    # Make predictions
    X_test = np.array([[6], [7]])
    predictions = model.predict(X_test)

    # Print predictions
    print("Predictions:", predictions)


if __name__ == "__main__":
    main()